@page "/ingredients"
@using FoodInventory.Data
@using FoodInventory.Models
@inject IDialogService DialogService
@inject InventoryRepository InventoryRepository
@rendermode InteractiveServer

<PageTitle>Ingredients</PageTitle>

<MudDataGrid Items="@ingredients.Take(4)">
    <Columns>
        <PropertyColumn Property="x => x.Name" Title="Name" />
        <PropertyColumn Property="x => x.Id" Title="Id" />
        <TemplateColumn>
            <CellTemplate>
                <MudIconButton Icon="@Icons.Material.Filled.Delete" OnClick="@((e) => DeleteIngredient(@context.Item.Id))"></MudIconButton>
            </CellTemplate>
        </TemplateColumn>
    </Columns>
</MudDataGrid>

<MudGrid Justify="Justify.FlexEnd" Style="padding: 10px">
    <MudItem>
        <MudFab Color="Color.Primary" StartIcon="@Icons.Material.Filled.Add" Label="Add Ingredient" OnClick="OpenDialogAsync" />
    </MudItem>
</MudGrid>



@code {

    private List<Ingredient> ingredients { get; set; } = new List<Ingredient>();

    protected override async Task OnInitializedAsync()
    {
        var loadedIngredients = await InventoryRepository.GetIngredients();
        ingredients = loadedIngredients.ToList();
    }

    private async Task AddIngredient(string ingredient)
    {
        var ingredientModel = new Ingredient { Name = ingredient };
        var insertedIngredient = await InventoryRepository.AddIngredient(ingredientModel);
        ingredients.Add(insertedIngredient);
    }

    private async Task DeleteIngredient(int id)
    {
        await InventoryRepository.DeleteIngredient(id);
        ingredients.Remove(ingredients.First(x => x.Id == id));
    }

    private async Task OpenDialogAsync()
    {
        var options = new DialogOptions { CloseOnEscapeKey = true };
        var dialog = await DialogService.ShowAsync<IngredientDialog>("Add Ingredient", options);
        var result = await dialog.Result;

        if (result is not null && !result.Canceled && result.Data is Ingredient ingredient)
        {
            await AddIngredient(ingredient.Name);
        }
    }
}
